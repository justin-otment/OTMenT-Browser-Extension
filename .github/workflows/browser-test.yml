name: Browser Tests with VPN Rotation

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: read
  actions: write

jobs:
  vpn-browser:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout source
      - name: Checkout
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Install dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            xvfb \
            openvpn \
            iproute2 \
            iputils-ping \
            curl \
            libnss3 \
            libxss1 \
            libgbm-dev \
            libasound2 \
            libgtk-3-0 \
            fonts-liberation \
            xdg-utils

      # 4Ô∏è‚É£ Setup Chrome
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: latest
          install-dependencies: true

      # 5Ô∏è‚É£ Install npm packages (your extension & Puppeteer)
      - name: Install Node packages
        run: |
          npm ci
          npm install puppeteer --save-dev

      # 6Ô∏è‚É£ Prepare artifacts folders
      - name: Create artifacts folders
        run: mkdir -p artifacts/screenshots artifacts/diagnostics artifacts/videos

      # 7Ô∏è‚É£ Ensure test page exists
      - name: Ensure test page
        run: |
          if [ ! -f "otment-test.html" ]; then
            echo "‚ö†Ô∏è  Creating fallback otment-test.html"
            cat <<'HTML' > otment-test.html
            <!DOCTYPE html>
            <html lang="en">
            <head><meta charset="UTF-8"><title>OTMenT Test</title></head>
            <body>
              <h2>OTMenT Test Page</h2>
              <div id="status">Loading...</div>
              <script>
                setTimeout(()=>{document.getElementById('status').innerText='Active';},1500);
              </script>
            </body>
            </html>
            HTML
          fi
          echo "‚úÖ Test page verified."

      # 8Ô∏è‚É£ Run VPN + Browser orchestrator
      - name: Run VPN rotation and browser automation
        env:
          CI: true
        run: |
          echo "üöÄ Starting orchestrator.js..."
          node scripts/orchestrator.js
        timeout-minutes: 45
        continue-on-error: false

      # 9Ô∏è‚É£ Run headed tests (if orchestrator exits cleanly)
      - name: Run headed browser tests under Xvfb
        env:
          CI: true
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" npm run test:headed
        timeout-minutes: 30

      # üîü Diagnostics and artifact collection
      - name: Collect logs and diagnostics
        if: always()
        run: |
          echo "üßæ Collecting artifacts..."
          mkdir -p artifacts/diagnostics
          if [ -f /tmp/openvpn.log ]; then
            cp /tmp/openvpn.log artifacts/diagnostics/openvpn.log
          fi
          echo "Listing artifacts:"
          find artifacts -type f || true

      # 11Ô∏è‚É£ Upload artifacts to GitHub
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vpn-browser-artifacts
          path: artifacts/**
